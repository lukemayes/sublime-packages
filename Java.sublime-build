{
    "cmd": [
                "/Users/lmayes/bin/mvn_parent_pom.sh",
                "-Dcheckstyle.skip=true",
                "-Dfindbugs.skip=true",
                "-Dpmd.skip=true",
                "-DskipTests=true",
                "compile"
            ],
    "selector": "source.java",
    
    "variants": [
        {
            "cmd": ["javac", "$file"],
            "name": "javac $file"
        },
        {
            "cmd": ["/Users/lmayes/bin/mvn_parent_pom.sh", "-DskipTests=true", "compile"],
            "name": "mvn checkstyle findbugs pmd"
        },
        {
            "cmd": [
                        "/Users/lmayes/bin/mvn_parent_pom.sh",
                        "-Dcheckstyle.skip=true",
                        "-Dfindbugs.skip=true",
                        "-Dpmd.skip=true",
                        "test"
                    ],
            "name": "mvn test"
        },
        {
            "cmd": [
                        "/Users/lmayes/bin/mvn_parent_pom.sh",
                        "-Dcheckstyle.skip=true",
                        "-Dfindbugs.skip=true",
                        "-Dpmd.skip=true",
                        "-DfailIfNoTests=false",
                        /*
                         * Append 'Test' if it's not already there (to run corresponding test file for a given class).
                         * This allows you to run tests for a given test file (BookingControllerTest.java) but also a
                         * source file that has a corresponding test (BookingController.java).
                         */
                        "-Dtest=${file_base_name/Test//}Test",
                        "test"
                    ],
            "name": "mvn test $file"
        },
        {
            "cmd": [
                "/Users/lmayes/bin/mvn_parent_pom.sh",
                "-Dcheckstyle.skip=true",
                "-Dfindbugs.skip=true",
                "-Dpmd.skip=true",
                "-DskipTests=true",
                "compile"
            ],
            "name": "mvn compile $file",
        }
    ]
}

/*
 * Source of mvn_parent_pom.sh provided inline for reference.
 *
 *
 *    #!/bin/bash
 *
 *    #====================================================================
 *    #== Finds the first parent directory with a pom.xml and changes to
 *    #== it. After changing to the correct directory, it calls mvn (maven)
 *    #== passing any arguments that were given to the script.
 *    #== 
 *    #== Thanks to http://unix.stackexchange.com/users/4194/arcege and his
 *    #== answer (http://unix.stackexchange.com/a/29033) for the head
 *    #== start.
 *    #====================================================================
 *
 *    owd=$PWD
 *    cwd=$PWD
 *
 *    while [ ! -e "$cwd/pom.xml" ] && [ "x$cwd" != x/ ]; do
 *        cwd=`dirname "$cwd"`
 *    done
 *
 *    cd "$cwd"
 *
 *    mvn $*
 *
 *    cd $owd
 */
